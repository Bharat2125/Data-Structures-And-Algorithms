//DFS
void dfsUtil(int node,vector<int>adj[],int vis[],vector<int>&dfs)
{
	vis[node] =1;
	dfs.push_back(node);
	// cout<<node<<" ";
	for(auto it: adj[node])
	{
		if(!vis[it])
		{
			dfsUtil(it,adj,vis,dfs);
		}
	}
}

vector<int> dfsTraversal(int n, vector<int>adj[])
{
	int vis[n+1] ={0};
	int start = 1;
	vector<int>dfs;
	dfsUtil(start,adj,vis,dfs);
	return dfs;
}

TC: 0(N) + 0(2E)
SC: 0(3N)
